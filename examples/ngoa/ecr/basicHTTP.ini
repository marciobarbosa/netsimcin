#
# This ini file runs a a different application on the same network, NClients.
# It models a web user (HTTP 1.0 & 1.1), browsing single-document pages (i.e. those
# without images, applets, frames, etc). It uses TCPBasicClientApp and
# TCPGenericSrvApp.
#
# To try, type "./run -f basicHTTP.ini"
#
# References
# [1] N. K. Shankaranarayanan, Z. Jiang, and P. Mishra, "User-perceived performance
#		of web-browsing and interactive data in HFC cable access networks," Proc. of ICC,
#		June 2001.
#


[General]
network = ECRTest
#debug-on-errors = true
#sim-time-limit = 1000h
sim-time-limit = 48h
#################################
# command environment settings
#################################
cmdenv-express-mode = true
cmdenv-performance-display = false
#################################
# Tk environment settings
#################################
tkenv-plugin-path = ../../../etc/plugins
**.vector-recording = false

# number of client computers
*.n = 10

# tcp apps
**.cli[*].numTcpApps = 1
#**.cli[*].tcpAppType = "TCPBasicClientApp"
**.cli[*].tcpAppType = "HttpClientApp"
**.cli[*].tcpApp[0].address = ""
**.cli[*].tcpApp[0].port = -1
**.cli[*].tcpApp[0].connectAddress = "srv"
**.cli[*].tcpApp[0].connectPort = 80

#**.cli[*].tcpApp[0].startTime = exponential(5s)
## HTTP 1.0
##**.cli[*].tcpApp[0].numRequestsPerSession = 1
## HTTP 1.1, with keepalive
## - normal web page
#**.cli[*].tcpApp[0].numRequestsPerSession = exponential(5)
## - busy web page
##**.cli[*].tcpApp[0].numRequestsPerSession = exponential(6)
#**.cli[*].tcpApp[0].requestLength = truncnormal(350B,20B)
#**.cli[*].tcpApp[0].replyLength = exponential(2000B)
#**.cli[*].tcpApp[0].thinkTime = truncnormal(2s,3s)
#**.cli[*].tcpApp[0].idleInterval = truncnormal(3600s,1200s)
#**.cli[*].tcpApp[0].reconnectInterval = 30s

#################################
# Web Workload Model based on [1]
#################################
**.cli[*].tcpApp[0].startTime = uniform(0min,1min)
**.cli[*].tcpApp[0].numRequestsPerSession = exponential(10)
**.cli[*].tcpApp[0].requestLength = 16B
**.cli[*].tcpApp[0].replyLength = exponential(6750B)
**.cli[*].tcpApp[0].thinkTime = 0s
**.cli[*].tcpApp[0].idleInterval = exponential(14.5s)
**.cli[*].tcpApp[0].reconnectInterval = 30s

**.srv.numTcpApps = 1
**.srv.tcpAppType = "TCPGenericSrvApp"
# Another choice of server app (it does the same as TCPGenericSrvApp):
#  **.srv.tcpAppType="TCPSrvHostApp"
#  **.srv.tcpApp[0].serverThreadClass="TCPGenericSrvThread"
**.srv.tcpApp[0].address = ""
**.srv.tcpApp[0].port = 80
**.srv.tcpApp[0].replyDelay = 0

# tcp settings
**.tcp.sendQueueClass = "TCPMsgBasedSendQueue"
#**.tcp.sendQueueClass = "TCPVirtualDataSendQueue"
**.tcp.receiveQueueClass = "TCPMsgBasedRcvQueue"
#**.tcp.receiveQueueClass = "TCPVirtualDataRcvQueue"

# NIC configuration
**.ppp[*].queueType = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 10  # in routers

# NAM trace
**.nam.logfile = ""
 
[Config TdmPonWithHttp]
# number of client computers
*.n = ${n=1, 10, 100..1000 step 100}
